-- Enhanced Camlock GUI with Sounds & Effects
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local SoundService = game:GetService("SoundService")

local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- Default settings
local camLockEnabled = false
local camLockKey = Enum.KeyCode.Q
local smoothness = 0.1
local targetPlayer = nil
local predictionAmount = Vector3.new(0.05, 0, 0.05) -- Reduced prediction
local legitMode = false  -- New variable to toggle between legit and unlegit modes

-- GUI Creation
local screenGui = Instance.new("ScreenGui", localPlayer:WaitForChild("PlayerGui"))
screenGui.Name = "CamlockGUI"
screenGui.ResetOnSpawn = false

-- Sound Effects
local clickSound = Instance.new("Sound", screenGui)
clickSound.SoundId = "rbxassetid://12221967" -- UI Click
clickSound.Volume = 1

local toggleSound = Instance.new("Sound", screenGui)
toggleSound.SoundId = "rbxassetid://413279809" -- Switch
toggleSound.Volume = 1

local sparkleSound = Instance.new("Sound", screenGui)
sparkleSound.SoundId = "rbxassetid://9118823103" -- Sparkle
sparkleSound.Volume = 1
sparkleSound:Play()

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 270, 0, 240) -- Adjusted height for new button
mainFrame.Position = UDim2.new(0, 20, 0, 100)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundTransparency = 0.1
mainFrame.Active = true
mainFrame.Draggable = true

local uiCorner = Instance.new("UICorner", mainFrame)
uiCorner.CornerRadius = UDim.new(0, 12)

local uiStroke = Instance.new("UIStroke", mainFrame)
uiStroke.Thickness = 2
uiStroke.Color = Color3.fromRGB(0, 200, 255)
uiStroke.Transparency = 0.3

local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Text = "CallMeDasher Lock"
title.TextColor3 = Color3.fromRGB(0, 200, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 20

local toggleButton = Instance.new("TextButton", mainFrame)
toggleButton.Size = UDim2.new(1, -20, 0, 30)
toggleButton.Position = UDim2.new(0, 10, 0, 40)
toggleButton.Text = "Toggle Camlock (OFF)"
toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
toggleButton.TextColor3 = Color3.new(1,1,1)
toggleButton.Font = Enum.Font.Gotham
toggleButton.TextSize = 16
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 6)

local legitModeButton = Instance.new("TextButton", mainFrame) -- New button for Legit/Unlegit Mode
legitModeButton.Size = UDim2.new(1, -20, 0, 30)
legitModeButton.Position = UDim2.new(0, 10, 0, 180) -- Position below the key selector
legitModeButton.Text = "Toggle Legit Mode (OFF)"
legitModeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
legitModeButton.TextColor3 = Color3.new(1,1,1)
legitModeButton.Font = Enum.Font.Gotham
legitModeButton.TextSize = 16
Instance.new("UICorner", legitModeButton).CornerRadius = UDim.new(0, 6)

local smoothLabel = Instance.new("TextLabel", mainFrame)
smoothLabel.Position = UDim2.new(0, 10, 0, 80)
smoothLabel.Size = UDim2.new(1, -20, 0, 20)
smoothLabel.Text = "Smoothness: 0.1"
smoothLabel.TextColor3 = Color3.new(1,1,1)
smoothLabel.BackgroundTransparency = 1
smoothLabel.Font = Enum.Font.Gotham
smoothLabel.TextSize = 14

local smoothSlider = Instance.new("TextButton", mainFrame)
smoothSlider.Position = UDim2.new(0, 10, 0, 105)
smoothSlider.Size = UDim2.new(1, -20, 0, 10)
smoothSlider.BackgroundColor3 = Color3.fromRGB(70, 70, 100)
smoothSlider.Text = ""
smoothSlider.AutoButtonColor = false
Instance.new("UICorner", smoothSlider).CornerRadius = UDim.new(0, 5)

local fill = Instance.new("Frame", smoothSlider)
fill.BackgroundColor3 = Color3.fromRGB(0, 200, 255)
fill.Size = UDim2.new(smoothness, 0, 1, 0)
fill.BorderSizePixel = 0
Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 5)

local keybindLabel = Instance.new("TextLabel", mainFrame)
keybindLabel.Position = UDim2.new(0, 10, 0, 125)
keybindLabel.Size = UDim2.new(1, -20, 0, 20)
keybindLabel.Text = "Keybind: Q"
keybindLabel.TextColor3 = Color3.new(1,1,1)
keybindLabel.BackgroundTransparency = 1
keybindLabel.Font = Enum.Font.Gotham
keybindLabel.TextSize = 14

local keySelector = Instance.new("TextButton", mainFrame)
keySelector.Position = UDim2.new(0, 10, 0, 150)
keySelector.Size = UDim2.new(1, -20, 0, 20)
keySelector.Text = "Click to change key"
keySelector.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
keySelector.TextColor3 = Color3.new(1,1,1)
keySelector.Font = Enum.Font.Gotham
keySelector.TextSize = 14
Instance.new("UICorner", keySelector).CornerRadius = UDim.new(0, 6)

-- Closest Player Function
local function getClosestPlayer()
	local closest, shortestDistance = nil, math.huge
	local myChar = localPlayer.Character
	if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then return end
	local myPos = myChar.HumanoidRootPart.Position
	for _, player in pairs(Players:GetPlayers()) do
		if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local dist = (player.Character.HumanoidRootPart.Position - myPos).Magnitude
			if dist < shortestDistance then
				shortestDistance = dist
				closest = player
			end
		end
	end
	return closest
end

-- Toggle Camlock
local function toggleCamlock()
	toggleSound:Play()
	camLockEnabled = not camLockEnabled
	if camLockEnabled then
		targetPlayer = getClosestPlayer()
		toggleButton.Text = "Toggle Camlock (ON)"
	else
		targetPlayer = nil
		toggleButton.Text = "Toggle Camlock (OFF)"
	end
end

-- Toggle Legit Mode
local function toggleLegitMode()
	legitMode = not legitMode
	if legitMode then
		legitModeButton.Text = "Toggle Legit Mode (ON)"
		smoothness = 0.05
		predictionAmount = Vector3.new(0.02, 0, 0.02)  -- Lower prediction in legit mode
	else
		legitModeButton.Text = "Toggle Legit Mode (OFF)"
		smoothness = 0.1
		predictionAmount = Vector3.new(0.1, 0, 0.1)  -- Higher prediction in unlegit mode
	end
end

toggleButton.MouseButton1Click:Connect(function()
	clickSound:Play()
	toggleCamlock()
end)

legitModeButton.MouseButton1Click:Connect(function()
	clickSound:Play()
	toggleLegitMode()
end)

smoothSlider.MouseButton1Down:Connect(function()
	clickSound:Play()
	local conn
	conn = RunService.RenderStepped:Connect(function()
		local mouse = UserInputService:GetMouseLocation().X
		local sliderPos = smoothSlider.AbsolutePosition.X
		local sliderSize = smoothSlider.AbsoluteSize.X
		local percent = math.clamp((mouse - sliderPos) / sliderSize, 0, 1)
		smoothness = math.clamp(percent, 0.01, 1)
		fill.Size = UDim2.new(percent, 0, 1, 0)
		smoothLabel.Text = ("Smoothness: %.2f"):format(smoothness)
	end)
	UserInputService.InputEnded:Wait()
	if conn then conn:Disconnect() end
end)

local waitingForKey = false
keySelector.MouseButton1Click:Connect(function()
	clickSound:Play()
	keySelector.Text = "Press a key..."
	waitingForKey = true
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if waitingForKey then
		if input.KeyCode ~= Enum.KeyCode.Unknown then
			camLockKey = input.KeyCode
			keybindLabel.Text = "Keybind: " .. camLockKey.Name
			keySelector.Text = "Click to change key"
			waitingForKey = false
			clickSound:Play()
		end
	else
		if input.KeyCode == camLockKey then
			toggleCamlock()
		end
	end
end)

-- Smooth Camlock Logic
RunService.RenderStepped:Connect(function()
	if camLockEnabled and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = targetPlayer.Character.HumanoidRootPart
		local predictedPosition = hrp.Position + (hrp.Velocity * predictionAmount)
		local camPos = camera.CFrame.Position
		local desiredLookVector = (predictedPosition - camPos).Unit
		local currentLookVector = camera.CFrame.LookVector
		local blended = currentLookVector:Lerp(desiredLookVector, smoothness)
		camera.CFrame = CFrame.new(camPos, camPos + blended)
	end
end)
